// https://github.com/ashmind/SharpLab/issues/39#issuecomment-298152571
using System;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;

static class C {
    static int M(int x) {
        return Foo(x + 0x12345).Result;
    }

    static async Task<int> Foo(int x) {
        return x;
    }
}

#=>

; Core CLR v<IGNORE> (coreclr.dll) on amd64.

C.M(Int32)
    L0000: sub rsp, 0x28
    L0004: add ecx, 0x12345
    L000a: call C.Foo(Int32)
    L000f: mov rcx, rax
    L0012: mov rax, 0x<IGNORE>
    L001c: cmp [rcx], ecx
    L001e: add rsp, 0x28
    L0022: jmp rax

C.Foo(Int32)
    L0000: sub rsp, 0x38
    L0004: xor eax, eax
    L0006: mov [rsp+0x28], rax
    L000b: mov [rsp+0x30], rax
    L0010: mov [rsp+0x2c], ecx
    L0014: xor ecx, ecx
    L0016: mov [rsp+0x30], rcx
    L001b: mov dword [rsp+0x28], 0x<IGNORE>
    L0023: lea rcx, [rsp+0x28]
    L0028: call System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[C+<Foo>d__1, _]](<Foo>d__1 ByRef)
    L002d: mov rax, [rsp+0x30]
    L0032: test rax, rax
    L0035: jnz L0041
    L0037: lea rcx, [rsp+0x30]
    L003c: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].InitializeTaskAsPromise()
    L0041: nop
    L0042: add rsp, 0x38
    L0046: ret

C+<Foo>d__1.MoveNext()
    L0000: push rbp
    L0001: push rdi
    L0002: push rsi
    L0003: sub rsp, 0x30
    L0007: lea rbp, [rsp+0x40]
    L000c: mov [rbp-0x20], rsp
    L0010: mov [rbp+0x10], rcx
    L0014: mov rcx, [rbp+0x10]
    L0018: mov esi, [rcx+0x4]
    L001b: mov rcx, [rbp+0x10]
    L001f: mov dword [rcx], 0x<IGNORE>
    L0025: mov rdi, [rbp+0x10]
    L0029: add rdi, 0x8
    L002d: cmp qword [rdi], 0x0
    L0031: jnz L0083
    L0033: mov ecx, esi
    L0035: cmp ecx, 0x9
    L0038: jge L005d
    L003a: cmp esi, 0x<IGNORE>
    L003d: jl L005d
    L003f: mov rax, 0x<IGNORE>
    L0049: mov rax, [rax]
    L004c: inc ecx
    L004e: cmp ecx, [rax+0x8]
    L0051: jae L0096
    L0053: movsxd rcx, ecx
    L0056: mov rdx, [rax+rcx*8+0x10]
    L005b: jmp L0079
    L005d: mov rcx, 0x<IGNORE>
    L0067: call 0x<IGNORE>
    L006c: mov rdx, rax
    L006f: mov dword [rdx+0x34], 0x<IGNORE>
    L0076: mov [rdx+0x38], esi
    L0079: mov rcx, rdi
    L007c: call 0x<IGNORE>
    L0081: jmp L008d
    L0083: mov rcx, rdi
    L0086: mov edx, esi
    L0088: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].SetExistingTaskResult(Int32)
    L008d: nop
    L008e: lea rsp, [rbp-0x10]
    L0092: pop rsi
    L0093: pop rdi
    L0094: pop rbp
    L0095: ret
    L0096: call 0x<IGNORE>
    L009b: int3
    L009c: push rbp
    L009d: push rdi
    L009e: push rsi
    L009f: sub rsp, 0x30
    L00a3: mov rbp, [rcx+0x20]
    L00a7: mov [rsp+0x20], rbp
    L00ac: lea rbp, [rbp+0x40]
    L00b0: mov rcx, [rbp+0x10]
    L00b4: mov dword [rcx], 0x<IGNORE>
    L00ba: mov rcx, [rbp+0x10]
    L00be: add rcx, 0x8
    L00c2: call System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Int32, System.Private.CoreLib]].SetException(System.Exception)
    L00c7: lea rax, [rip-0x41]
    L00ce: add rsp, 0x30
    L00d2: pop rsi
    L00d3: pop rdi
    L00d4: pop rbp
    L00d5: ret

C+<Foo>d__1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
    L0000: sub rsp, 0x28
    L0004: cmp [rcx], ecx
    L0006: add rcx, 0x8
    L000a: test rdx, rdx
    L000d: jz L0030
    L000f: cmp qword [rcx], 0x0
    L0013: jz L002b
    L0015: mov ecx, 0x21
    L001a: mov rax, 0x<IGNORE>
    L0024: add rsp, 0x28
    L0028: jmp rax
    L002b: add rsp, 0x28
    L002f: ret
    L0030: mov ecx, 0x36
    L0035: call System.ThrowHelper.ThrowArgumentNullException(System.ExceptionArgument)
    L003a: int3